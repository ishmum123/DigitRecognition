dataset/train-images-idx3-ubyte.gz
Extracting dataset/train-images-idx3-ubyte.gz
num_images = 800 row = 100 col = 100
8000000
Extracting dataset/train-labels-idx1-ubyte.gz
num_items = 800 = 800
[15 17  3  4  1  1 13 11  7 13  4  0 14 11 15  1  5 15  5  2  8 16 13  7 12
 18 10  1 17 11  9  3 15  4 16 15  1  3 16  9 19 15  9 18 10  3  5 15 10  2
  7  9 18  2 11 15 12  8  0 14  4  0  8  4 14 13  5  2 12  9 13 18  3 19  9
 17  2  7  3  6 19  9  4  2 16 14  4  6  2 16 16  6  9 15 17 13  1 16 19 19
  1 16 18  6  6  3  2  7 18  8  4  0  4 16 10 11  6 17 13 19 14 16  6 15  6
  1  2 13 19  8  4 10 18  2 17 16  7 16 15  0 14  8 19  9 13  1 16  6 11  0
  1 13  8 19  0  3  5 18  7 16 14  4  4 17  4  3 12 16 11 17 18  4  1  7 12
 14 18 10  5 16  1  6  1 17 12  0  3  9  2 16 12  0  5  6 11 10 17 19  5 12
 14 15  3 16 18 19  0  0 10  7  4 15  5 10 19  4 12  9 13 10 17 14  4 10  4
 15 10  6  5  6  3  1  2  3  2 14 14  8 18  2 14 12 14 13 15 18  5 12 14 13
 10  5 19  2  9 19 19 11  9 15 12 12  6  0  5  9 15  4  7 19  5  9  6  3  6
  9 15  3 11 10  6 12 15  7 18 12 12  1 18  8 11  1 18 18  1 13  7  5  2  8
  1 12 17  0 19 13 13 15 16 19  8 13 12  3 14  6 13 18  4 11  2 19 17  8 15
  2  6  1 16 11 16 10 16 13  7  6  2  2  7  6 15 10  6  4 16 14 18  4  6 13
  6 10 14 14 19 18 18  7  5  8  0 11  1 13 10  4 13 19  3  0  9  4  5  8  3
 13  5  8 16 16  6 14  2  2 17  3 19  3  4 14  9 10 10  7 10  6  5  0  4  7
 18 15  0 15  1  2 15  0 13  6  7 19 14 10  9  1  7 10  8  2  8 10  4  0  1
 10 14 19 19 19 17  5  6  4 17 18 12 12 17 10  0 12  8  2  7  2 12 12 13 16
  2  9 17 15 10  5 19  3 19 18  6  7 12 11  8 14  2  4  1 12  4 19  1 16 11
  5  8 17  4 17 16 11 12  4  3 17  0  9  7  3  5 16 10 18  5 15  9  9 10 16
  1  1  8  5 17 11  3  0 18  4 13  9  9 13 14  5 10  7 12  8 15 17 12  5  7
  3 14 16 15  8 10 11  8 11  3  0 19  5 14  4 12  3  9 18  0  2 11  7 17  8
 15 11  2  7  1 11 17  1  4  4  9 16  6  3 12 13 11  8 15  2 10 18  8 11 14
 13 10  7 11 11  4  2  7 12  7 18 13 19  5  6  8 12 13 17  0  5  9 11 17 11
  7  8  7  1 14  7 18  5 12  2  8  0 17  9  5  8  1 18  5  9  3  0  1  3 17
 11 14  1 13  3 18  8  8 17  9 12 19 13 17 13  3  2  3 11 15 14  0  8 13  5
 18  3 14  3  0 10  6  4 18 10 18 18 13  9 15 16 15  3  0  6 11 19  2  5 13
  0  9 17 18  8 17 10  8  6 12  7 11  1  5  7 17 17 13  5 12  9 19  0 14  3
 12  8  6 14 19  1  8  6  2 15  7  1 16  0 17  3  7  7 18  3 16 13 16  0  0
  4 15  2  9  9  2  1 16 10  7  1 18 14 12 19 16 13  2 15  5 17 17 10 19 11
  5 14 15  7  2 11  7  0 14  8  9 11 17 12 17  4  5  7  6  5  3  4 19 15  2
  9  0  1 11 18  3 14 11  2  6  9 12 11 19 15 16 16 10 19 11  1  9  6  9  6]
num_labels = 800 num_classes = 20
index_offset = [    0    20    40    60    80   100   120   140   160   180   200   220
   240   260   280   300   320   340   360   380   400   420   440   460
   480   500   520   540   560   580   600   620   640   660   680   700
   720   740   760   780   800   820   840   860   880   900   920   940
   960   980  1000  1020  1040  1060  1080  1100  1120  1140  1160  1180
  1200  1220  1240  1260  1280  1300  1320  1340  1360  1380  1400  1420
  1440  1460  1480  1500  1520  1540  1560  1580  1600  1620  1640  1660
  1680  1700  1720  1740  1760  1780  1800  1820  1840  1860  1880  1900
  1920  1940  1960  1980  2000  2020  2040  2060  2080  2100  2120  2140
  2160  2180  2200  2220  2240  2260  2280  2300  2320  2340  2360  2380
  2400  2420  2440  2460  2480  2500  2520  2540  2560  2580  2600  2620
  2640  2660  2680  2700  2720  2740  2760  2780  2800  2820  2840  2860
  2880  2900  2920  2940  2960  2980  3000  3020  3040  3060  3080  3100
  3120  3140  3160  3180  3200  3220  3240  3260  3280  3300  3320  3340
  3360  3380  3400  3420  3440  3460  3480  3500  3520  3540  3560  3580
  3600  3620  3640  3660  3680  3700  3720  3740  3760  3780  3800  3820
  3840  3860  3880  3900  3920  3940  3960  3980  4000  4020  4040  4060
  4080  4100  4120  4140  4160  4180  4200  4220  4240  4260  4280  4300
  4320  4340  4360  4380  4400  4420  4440  4460  4480  4500  4520  4540
  4560  4580  4600  4620  4640  4660  4680  4700  4720  4740  4760  4780
  4800  4820  4840  4860  4880  4900  4920  4940  4960  4980  5000  5020
  5040  5060  5080  5100  5120  5140  5160  5180  5200  5220  5240  5260
  5280  5300  5320  5340  5360  5380  5400  5420  5440  5460  5480  5500
  5520  5540  5560  5580  5600  5620  5640  5660  5680  5700  5720  5740
  5760  5780  5800  5820  5840  5860  5880  5900  5920  5940  5960  5980
  6000  6020  6040  6060  6080  6100  6120  6140  6160  6180  6200  6220
  6240  6260  6280  6300  6320  6340  6360  6380  6400  6420  6440  6460
  6480  6500  6520  6540  6560  6580  6600  6620  6640  6660  6680  6700
  6720  6740  6760  6780  6800  6820  6840  6860  6880  6900  6920  6940
  6960  6980  7000  7020  7040  7060  7080  7100  7120  7140  7160  7180
  7200  7220  7240  7260  7280  7300  7320  7340  7360  7380  7400  7420
  7440  7460  7480  7500  7520  7540  7560  7580  7600  7620  7640  7660
  7680  7700  7720  7740  7760  7780  7800  7820  7840  7860  7880  7900
  7920  7940  7960  7980  8000  8020  8040  8060  8080  8100  8120  8140
  8160  8180  8200  8220  8240  8260  8280  8300  8320  8340  8360  8380
  8400  8420  8440  8460  8480  8500  8520  8540  8560  8580  8600  8620
  8640  8660  8680  8700  8720  8740  8760  8780  8800  8820  8840  8860
  8880  8900  8920  8940  8960  8980  9000  9020  9040  9060  9080  9100
  9120  9140  9160  9180  9200  9220  9240  9260  9280  9300  9320  9340
  9360  9380  9400  9420  9440  9460  9480  9500  9520  9540  9560  9580
  9600  9620  9640  9660  9680  9700  9720  9740  9760  9780  9800  9820
  9840  9860  9880  9900  9920  9940  9960  9980 10000 10020 10040 10060
 10080 10100 10120 10140 10160 10180 10200 10220 10240 10260 10280 10300
 10320 10340 10360 10380 10400 10420 10440 10460 10480 10500 10520 10540
 10560 10580 10600 10620 10640 10660 10680 10700 10720 10740 10760 10780
 10800 10820 10840 10860 10880 10900 10920 10940 10960 10980 11000 11020
 11040 11060 11080 11100 11120 11140 11160 11180 11200 11220 11240 11260
 11280 11300 11320 11340 11360 11380 11400 11420 11440 11460 11480 11500
 11520 11540 11560 11580 11600 11620 11640 11660 11680 11700 11720 11740
 11760 11780 11800 11820 11840 11860 11880 11900 11920 11940 11960 11980
 12000 12020 12040 12060 12080 12100 12120 12140 12160 12180 12200 12220
 12240 12260 12280 12300 12320 12340 12360 12380 12400 12420 12440 12460
 12480 12500 12520 12540 12560 12580 12600 12620 12640 12660 12680 12700
 12720 12740 12760 12780 12800 12820 12840 12860 12880 12900 12920 12940
 12960 12980 13000 13020 13040 13060 13080 13100 13120 13140 13160 13180
 13200 13220 13240 13260 13280 13300 13320 13340 13360 13380 13400 13420
 13440 13460 13480 13500 13520 13540 13560 13580 13600 13620 13640 13660
 13680 13700 13720 13740 13760 13780 13800 13820 13840 13860 13880 13900
 13920 13940 13960 13980 14000 14020 14040 14060 14080 14100 14120 14140
 14160 14180 14200 14220 14240 14260 14280 14300 14320 14340 14360 14380
 14400 14420 14440 14460 14480 14500 14520 14540 14560 14580 14600 14620
 14640 14660 14680 14700 14720 14740 14760 14780 14800 14820 14840 14860
 14880 14900 14920 14940 14960 14980 15000 15020 15040 15060 15080 15100
 15120 15140 15160 15180 15200 15220 15240 15260 15280 15300 15320 15340
 15360 15380 15400 15420 15440 15460 15480 15500 15520 15540 15560 15580
 15600 15620 15640 15660 15680 15700 15720 15740 15760 15780 15800 15820
 15840 15860 15880 15900 15920 15940 15960 15980]
labels_one_hot = [[ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 ..., 
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]]
labels_dense.ravel() = [15 17  3  4  1  1 13 11  7 13  4  0 14 11 15  1  5 15  5  2  8 16 13  7 12
 18 10  1 17 11  9  3 15  4 16 15  1  3 16  9 19 15  9 18 10  3  5 15 10  2
  7  9 18  2 11 15 12  8  0 14  4  0  8  4 14 13  5  2 12  9 13 18  3 19  9
 17  2  7  3  6 19  9  4  2 16 14  4  6  2 16 16  6  9 15 17 13  1 16 19 19
  1 16 18  6  6  3  2  7 18  8  4  0  4 16 10 11  6 17 13 19 14 16  6 15  6
  1  2 13 19  8  4 10 18  2 17 16  7 16 15  0 14  8 19  9 13  1 16  6 11  0
  1 13  8 19  0  3  5 18  7 16 14  4  4 17  4  3 12 16 11 17 18  4  1  7 12
 14 18 10  5 16  1  6  1 17 12  0  3  9  2 16 12  0  5  6 11 10 17 19  5 12
 14 15  3 16 18 19  0  0 10  7  4 15  5 10 19  4 12  9 13 10 17 14  4 10  4
 15 10  6  5  6  3  1  2  3  2 14 14  8 18  2 14 12 14 13 15 18  5 12 14 13
 10  5 19  2  9 19 19 11  9 15 12 12  6  0  5  9 15  4  7 19  5  9  6  3  6
  9 15  3 11 10  6 12 15  7 18 12 12  1 18  8 11  1 18 18  1 13  7  5  2  8
  1 12 17  0 19 13 13 15 16 19  8 13 12  3 14  6 13 18  4 11  2 19 17  8 15
  2  6  1 16 11 16 10 16 13  7  6  2  2  7  6 15 10  6  4 16 14 18  4  6 13
  6 10 14 14 19 18 18  7  5  8  0 11  1 13 10  4 13 19  3  0  9  4  5  8  3
 13  5  8 16 16  6 14  2  2 17  3 19  3  4 14  9 10 10  7 10  6  5  0  4  7
 18 15  0 15  1  2 15  0 13  6  7 19 14 10  9  1  7 10  8  2  8 10  4  0  1
 10 14 19 19 19 17  5  6  4 17 18 12 12 17 10  0 12  8  2  7  2 12 12 13 16
  2  9 17 15 10  5 19  3 19 18  6  7 12 11  8 14  2  4  1 12  4 19  1 16 11
  5  8 17  4 17 16 11 12  4  3 17  0  9  7  3  5 16 10 18  5 15  9  9 10 16
  1  1  8  5 17 11  3  0 18  4 13  9  9 13 14  5 10  7 12  8 15 17 12  5  7
  3 14 16 15  8 10 11  8 11  3  0 19  5 14  4 12  3  9 18  0  2 11  7 17  8
 15 11  2  7  1 11 17  1  4  4  9 16  6  3 12 13 11  8 15  2 10 18  8 11 14
 13 10  7 11 11  4  2  7 12  7 18 13 19  5  6  8 12 13 17  0  5  9 11 17 11
  7  8  7  1 14  7 18  5 12  2  8  0 17  9  5  8  1 18  5  9  3  0  1  3 17
 11 14  1 13  3 18  8  8 17  9 12 19 13 17 13  3  2  3 11 15 14  0  8 13  5
 18  3 14  3  0 10  6  4 18 10 18 18 13  9 15 16 15  3  0  6 11 19  2  5 13
  0  9 17 18  8 17 10  8  6 12  7 11  1  5  7 17 17 13  5 12  9 19  0 14  3
 12  8  6 14 19  1  8  6  2 15  7  1 16  0 17  3  7  7 18  3 16 13 16  0  0
  4 15  2  9  9  2  1 16 10  7  1 18 14 12 19 16 13  2 15  5 17 17 10 19 11
  5 14 15  7  2 11  7  0 14  8  9 11 17 12 17  4  5  7  6  5  3  4 19 15  2
  9  0  1 11 18  3 14 11  2  6  9 12 11 19 15 16 16 10 19 11  1  9  6  9  6]
Extracting dataset/test-images-idx3-ubyte.gz
num_images = 120 row = 100 col = 100
1200000
Extracting dataset/test-labels-idx1-ubyte.gz
num_items = 120 = 120
[17 12 13 16 18 10  2  4  5 11 17  1  3  9  4  9  1 19  5 13  3  0 17  2 12
  5 16 13 10  3 15 11  9  7  1  2 13 11 15  8  7 17 19  7 19 11  1 15  7 13
  8  3 14  2 18 16  5 14 14  9  3  7  4  7  8  5 18  4  0 15 12 12 16  9  6
 18  0  9  6  1 10  2 11  1 17 10 16 12  4  8 17  8 10 10  6  6 19 16 19  5
 18 15 11 14  0 13 14 15  4 14  0  8  6 12  3 19  2  6  0 18]
num_labels = 120 num_classes = 20
index_offset = [   0   20   40   60   80  100  120  140  160  180  200  220  240  260  280
  300  320  340  360  380  400  420  440  460  480  500  520  540  560  580
  600  620  640  660  680  700  720  740  760  780  800  820  840  860  880
  900  920  940  960  980 1000 1020 1040 1060 1080 1100 1120 1140 1160 1180
 1200 1220 1240 1260 1280 1300 1320 1340 1360 1380 1400 1420 1440 1460 1480
 1500 1520 1540 1560 1580 1600 1620 1640 1660 1680 1700 1720 1740 1760 1780
 1800 1820 1840 1860 1880 1900 1920 1940 1960 1980 2000 2020 2040 2060 2080
 2100 2120 2140 2160 2180 2200 2220 2240 2260 2280 2300 2320 2340 2360 2380]
labels_one_hot = [[ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 ..., 
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]
 [ 0.  0.  0. ...,  0.  0.  0.]]
labels_dense.ravel() = [17 12 13 16 18 10  2  4  5 11 17  1  3  9  4  9  1 19  5 13  3  0 17  2 12
  5 16 13 10  3 15 11  9  7  1  2 13 11 15  8  7 17 19  7 19 11  1 15  7 13
  8  3 14  2 18 16  5 14 14  9  3  7  4  7  8  5 18  4  0 15 12 12 16  9  6
 18  0  9  6  1 10  2 11  1 17 10 16 12  4  8 17  8 10 10  6  6 19 16 19  5
 18 15 11 14  0 13 14 15  4 14  0  8  6 12  3 19  2  6  0 18]

num_input_pixels = 10000
num_classes = 20
num_batches = 60
num_hidden_1 = 4096
num_hidden_2 = 4096
training_epochs = 20
learning_rate = 0.001

Training Started!
Epoch: 0001 cost = 301196.447115385
Epoch: 0002 cost = 162868.233774038
Epoch: 0003 cost = 92314.436298077
Epoch: 0004 cost = 65594.862379808
Epoch: 0005 cost = 49014.560096154
Epoch: 0006 cost = 33422.911658654
Epoch: 0007 cost = 24800.101262019
Epoch: 0008 cost = 19958.524188702
Epoch: 0009 cost = 18534.342548077
Epoch: 0010 cost = 19114.169433594
Epoch: 0011 cost = 26187.120643029
Epoch: 0012 cost = 17385.067307692
Epoch: 0013 cost = 17865.610727163
Epoch: 0014 cost = 16843.207782452
Epoch: 0015 cost = 12305.678560697
Epoch: 0016 cost = 18141.742638221
Epoch: 0017 cost = 30101.539362981
Epoch: 0018 cost = 29235.205378606
Epoch: 0019 cost = 17824.188025841
Epoch: 0020 cost = 16580.720853365
Training Finished!
Testing started!
Accuracy: 45.8333343267
Testing finished!
